{
  "openapi": "3.0.0",
  "info": {
    "title": "BackEnd para sitio SlimMom",
    "version": "1.0.0",
    "description": "Documentación de la API para el sitio SlimMom, incluyendo autenticación y generación de tokens JWT."
  },
  "servers": [
    {
      "url": "https://slim-mom-bd9397140525.herokuapp.com/api",
      "description": "Servidor de producción en Heroku"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del usuario."
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del usuario."
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario."
          },
          "token": {
            "type": "string",
            "description": "Token JWT del usuario."
          },
          "height": {
            "type": "number",
            "description": "Altura del usuario en cm."
          },
          "desiredWeight": {
            "type": "number",
            "description": "Peso deseado del usuario en kg."
          },
          "age": {
            "type": "number",
            "description": "Edad del usuario."
          },
          "bloodType": {
            "type": "string",
            "enum": ["A", "B", "AB", "O"],
            "description": "Tipo de sangre del usuario."
          },
          "currentWeight": {
            "type": "number",
            "description": "Peso actual del usuario en kg."
          },
          "totalCalories": {
            "type": "number",
            "description": "Total de calorías consumidas."
          }
        },
        "example": {
          "name": "Juan Pérez",
          "email": "juan.perez@example.com",
          "password": "contraseña123",
          "token": "your_jwt_token",
          "height": 180,
          "desiredWeight": 75,
          "age": 30,
          "bloodType": "O",
          "currentWeight": 77,
          "totalCalories": 2000
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token JWT para el usuario."
          }
        },
        "example": {
          "token": "your_jwt_token"
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de error."
          }
        },
        "example": {
          "message": "No autorizado"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/generate-token": {
      "post": {
        "summary": "Generar un token JWT para el usuario.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "name": "Juan Pérez",
                "email": "juan.perez@example.com",
                "password": "contraseña123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token JWT generado con éxito.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta."
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    },
    "/auth/validate-token": {
      "get": {
        "summary": "Validar el token JWT.",
        "tags": ["Auth"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token es válido."
          },
          "401": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "500": {
            "description": "Error del servidor."
          }
        }
      }
    }
  }
}
